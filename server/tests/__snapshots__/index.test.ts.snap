// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bot: installation event bootstrap config 1`] = `
Object {
  "0": "dist
node_modules

.DS_Store
*.log*",
  "1": "{
  \\"hooks\\": {
    \\"pre-commit\\": \\"npm run make\\"
  }
}
",
  "10": "import { repository, label } from 'label-sync'

import { colors } from '../colors'

/**
 * Label configuration used internally by Prisma team. Labels are grouped
 * by their intention (e.g. bug/*, kind/*, process/*) and give
 * great base for issue triaging.
 */

export const prisma = repository({
  strict: false,
  labels: {
    /* Bugs */
    'bug/0-needs-info': label({
      color: colors.bug,
      description: 'More information is needed for reproduction.',
    }),
    'bug/1-repro-available': label({
      color: colors.bug,
      description: 'A reproduction exists and needs to be confirmed.',
    }),
    'bug/2-confirmed': label({
      color: colors.bug,
      description: 'We have confirmed that this is a bug.',
    }),
    /* Kind */
    'kind/bug': label({
      color: colors.kind,
      description: 'A reported bug.',
    }),
    'kind/regression': label({
      color: colors.kind,
      description: 'A reported bug in functionality that used to work before.',
    }),
    'kind/feature': label({
      color: colors.kind,
      description: 'A request for a new feature.',
    }),
    'kind/improvement': label({
      color: colors.kind,
      description: 'An improvement to existing feature and code.',
    }),
    'kind/docs': label({
      color: colors.kind,
      description: 'A documentation change is required.',
    }),
    'kind/discussion': label({
      color: colors.kind,
      description: 'Discussion is required.',
    }),
    'kind/question': label({
      color: colors.kind,
      description: 'Developer asked a question. No code changes required.',
    }),
    /* Process triaging. */
    'process/candidate': label({
      color: colors.process,
      description: 'Candidate for next Milestone.',
    }),
    'process/next-milestone': label({
      color: colors.process,
      description: 'Issue earmarked for next Milestone.',
    }),
    'process/product': label({
      color: colors.process,
      description:
        'Temporary label to export products issues from the Engineering process',
    }),
  },
})
",
  "2": "# LabelSync Template

Hi :wave:,

Welcome to LabelSync. We are very excited to see you use our service. We believe that managing organisations should be simple, that's why we built LabelSync.

## What this template includes?

- \`label-sync\`: utility package for generating configuration file
- \`huskyrc\`: pre-commit hooks
- \`prettier\`: code formatting
",
  "3": "repos: {}
",
  "4": "{
  \\"name\\": \\"labelsync\\",
  \\"version\\": \\"0.0.0\\",
  \\"private\\": true,
  \\"main\\": \\"index.js\\",
  \\"scripts\\": {
    \\"make\\": \\"ts-node src/index.ts\\"
  },
  \\"dependencies\\": {
    \\"husky\\": \\"^3.1.0\\",
    \\"label-sync\\": \\"latest\\"
  },
  \\"devDependencies\\": {
    \\"prettier\\": \\"^1.19.1\\",
    \\"ts-node\\": \\"^8.5.4\\",
    \\"typescript\\": \\"^3.7.4\\"
  },
  \\"license\\": \\"MIT\\"
}
",
  "5": "module.exports = {
  semi: false,
  singleQuote: true,
  trailingComma: 'all',
}
",
  "6": "{
  \\"compilerOptions\\": {
    \\"target\\": \\"es2017\\",
    \\"module\\": \\"commonjs\\",
    \\"lib\\": [\\"dom\\", \\"es2017\\", \\"es2019\\"],
    \\"rootDir\\": \\"src\\",
    \\"outDir\\": \\"dist\\"
  }
}
",
  "7": "export const colors = {
  area: 'FFD700',
  kind: '3B5BDB',
  status: 'F8F9FA',
  bug: 'ee0000',
  priority: 'F783AC',
  scope: '27CF79',
  team: 'FDF4E8',
  release: 'a5d8ff',
  process: 'EB9100',
}
",
  "8": "import { configuration, make } from 'label-sync'

import { github } from './repositories/github'
import { prisma } from './repositories/prisma'

/**
 * Create a configuration instance by definining repositories
 * and their configurations.
 */
const config = configuration({
  repositories: {
    /**
     * replace repository name with your own repositories
     */
    // 'emma-cli': github,
  },
})

/* Generates labelsync.yml into the root of repository. */
make({
  configs: [config],
})
",
  "9": "import { repository, label } from 'label-sync'

/**
 * Default collection of label in a Github repository.
 */
export const github = repository({
  strict: false,
  labels: {
    bug: label({
      color: '#d73a4a',
      description: \\"Something isn't working\\",
    }),
    documentation: label({
      color: '#0075ca',
      description: 'Improvements or additions to documentation',
    }),
    duplicate: label({
      color: '#cfd3d7',
      description: 'This issue or pull request already exists',
    }),
    enhancement: label({
      color: '#a2eeef',
      description: 'New feature or request',
    }),
    'good first issue': label({
      color: '#7057ff',
      description: 'Good for newcomers',
    }),
    'help wanted': label({
      color: '#008672',
      description: 'Extra attention is needed',
    }),
    invalid: label({
      color: '#e4e669',
      description: \\"This doesn't seem right\\",
    }),
    question: label({
      color: '#d876e3',
      description: 'Further information is requested',
    }),
    wontfix: label({
      color: '#000000',
      description: 'This will not be worked on',
    }),
  },
})
",
}
`;

exports[`bot: installation event bootstrap config 2`] = `
Object {
  "0": Array [
    Object {
      "mode": "100644",
      "path": "github.ts",
      "sha": 9,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "prisma.ts",
      "sha": 10,
      "type": "blob",
    },
  ],
  "1": Array [
    Object {
      "mode": "040000",
      "path": "repositories",
      "sha": 0,
      "type": "tree",
    },
    Object {
      "mode": "100644",
      "path": "colors.ts",
      "sha": 7,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "index.ts",
      "sha": 8,
      "type": "blob",
    },
  ],
  "2": Array [
    Object {
      "mode": "040000",
      "path": "src",
      "sha": 1,
      "type": "tree",
    },
    Object {
      "mode": "100644",
      "path": ".gitignore",
      "sha": 0,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": ".huskyrc.json",
      "sha": 1,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "README.md",
      "sha": 2,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "labelsync.yml",
      "sha": 3,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "package.json",
      "sha": 4,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "prettier.config.js",
      "sha": 5,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "tsconfig.json",
      "sha": 6,
      "type": "blob",
    },
  ],
}
`;

exports[`bot: installation event insufficient permissions 1`] = `
Object {
  "body": "# Insufficient permissions

Hi there,
Thank you for installing LabelSync. We have noticed that your 
configuration stretches beyond repositories we can access. We assume that you
forgot to allow access to certain repositories.
Please update your installation. 

_Missing repositories:_
 * emma-cli

Best,
LabelSync Team",
  "title": "LabelSync - Insufficient permissions",
}
`;

exports[`bot: installation invalid config issue 1`] = `
Object {
  "body": "# Invalid configuration

Hi there,
Thank you for using LabelSync. It seems like your configuration
uses an unknown format. That might be a consequence of invalid yaml 
cofiguration file. 

We encourage you to check out \\\\\`label-sync\\\\\` utility library that
simplifies your workflow by leveraging power of TypeScript. You can
also use a [starting tempalte](github.com/maticzav/label-sync-template).

Best,
LabelSync Team",
  "title": "LabelSync - Invalid configuration",
}
`;

exports[`bot: pull_request 1`] = `
Object {
  "body": "## LabelSync Overview 
> NOTE: This is only a preview of what will happen. Nothing has been changed yet.

### \`graphql-shield\`

__New labels:__
 * bug/3-fixing

__Changed labels:__
 * bug/2-bug-confirmed

__Removed labels:__
 * bug/4-fixed
---
### \`emma-cli\`

__New labels:__
No new labels created.

__Changed labels:__
No changed labels.

__Unconfigured labels.__
You have no unconfigured labels - you could make this repository \`strict\`.",
}
`;

exports[`bot: pull_request with insufficient permissions 1`] = `
Object {
  "body": "It seems like this configuration stretches beyond
repositories we can access. Please update it so we can help
you as best as we can.

_Missing repositories:_
 * emma-cli",
}
`;

exports[`bot: push event invalid configuration 1`] = `
Object {
  "body": "# Invalid configuration

Hi there,
Thank you for using LabelSync. It seems like your configuration
uses a format unknown to us. That might be a consequence of invalid yaml 
cofiguration file. 

We encourage you to check out \\\\\`label-sync\\\\\` utility library that
simplifies your workflow by leveraging power of TypeScript. You can
also use a [starting tempalte](github.com/maticzav/label-sync-template).

Best,
LabelSync Team",
  "title": "LabelSync - Invalid configuration",
}
`;

exports[`bot: push event with insufficient premissions 1`] = `
Object {
  "body": "# Insufficient permissions

Hi there,
We have noticed that your configuration stretches beyond
repositories we can access. Please update it so we can help
you as best as we can.

_Missing repositories:_
 * emma-cli

Best,
LabelSync Team",
  "title": "LabelSync - Insufficient permissions",
}
`;
