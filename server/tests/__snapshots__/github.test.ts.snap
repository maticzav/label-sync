// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`github integration: bootstraps configuraiton 1`] = `
Object {
  "0": "dist
node_modules

.DS_Store
*.log*",
  "1": "# LabelSync Template

Hi :wave:,

Welcome to LabelSync. We are very excited to see you use our service. We believe that managing organisations should be simple, that's why we built LabelSync.

## What this template includes?

- \`label-sync\`: utility package for generating configuration file
- \`huskyrc\`: pre-commit hooks
- \`prettier\`: code formatting
",
  "2": "import { labelsync, repo } from 'label-sync'

/* Repository */
import { prisma } from './repos/prisma'
import { github } from './repos/github'

{{! we use Handlebars to personalise initial configuration. }}

/* Config */
labelsync({
  repos: {
    /* Check presets in the repos folder. */
    // prisma,
    // github,
    /* Personalized repositories */
    {{#each repositories}}
    {{#with this}}
    \\"{{name}}\\": repo({
      config: {
        removeUnconfiguredLabels: false
      },
      labels: []
    }),
    {{/with}}
    {{/each}}
  },
})
",
  "3": "repos: {}
",
  "4": "{
  \\"name\\": \\"labelsync\\",
  \\"version\\": \\"0.0.0\\",
  \\"private\\": true,
  \\"main\\": \\"index.js\\",
  \\"scripts\\": {
    \\"make\\": \\"ts-node labelsync.ts\\"
  },
  \\"dependencies\\": {
    \\"husky\\": \\"3.1.0\\",
    \\"label-sync\\": \\"latest\\"
  },
  \\"devDependencies\\": {
    \\"prettier\\": \\"1.19.1\\",
    \\"ts-node\\": \\"8.6.2\\",
    \\"typescript\\": \\"3.8.3\\"
  },
  \\"husky\\": {
    \\"hooks\\": {
      \\"pre-commit\\": \\"yarn -s make && git add labelsync.yml\\"
    }
  },
  \\"prettier\\": {
    \\"semi\\": false,
    \\"singleQuote\\": true,
    \\"trailingComma\\": \\"all\\",
    \\"printWidth\\": 100
  },
  \\"license\\": \\"MIT\\"
}
",
  "5": "{
  \\"compilerOptions\\": {
    \\"target\\": \\"es2017\\",
    \\"module\\": \\"commonjs\\",
    \\"rootDir\\": \\".\\"
  }
}
",
  "6": "import { repo, label } from 'label-sync'

/**
 * Default collection of label in a Github repository.
 */
export const github = repo({
  config: {
    removeUnconfiguredLabels: false,
  },
  labels: [
    label({
      name: 'bug',
      color: '#d73a4a',
      description: \\"Something isn't working\\",
    }),
    label({
      name: 'documentation',
      color: '#0075ca',
      description: 'Improvements or additions to documentation',
    }),
    label({
      name: 'duplicate',
      color: '#cfd3d7',
      description: 'This issue or pull request already exists',
    }),
    label({
      name: 'enhancement',
      color: '#a2eeef',
      description: 'New feature or request',
    }),
    label({
      name: 'good first issue',
      color: '#7057ff',
      description: 'Good for newcomers',
    }),
    label({
      name: 'help wanted',
      color: '#008672',
      description: 'Extra attention is needed',
    }),
    label({
      name: 'invalid',
      color: '#e4e669',
      description: \\"This doesn't seem right\\",
    }),
    label({
      name: 'question',
      color: '#d876e3',
      description: 'Further information is requested',
    }),
    label({
      name: 'wontfix',
      color: '#000000',
      description: 'This will not be worked on',
    }),
  ],
})
",
  "7": "import { repo, label, colors } from 'label-sync'

/**
 * Label configuration used internally by Prisma team. Labels are grouped
 * by their intention (e.g. bug/*, kind/*, process/*) and give
 * great base for issue triaging.
 */

export const prisma = repo({
  config: {
    removeUnconfiguredLabels: false,
  },
  labels: [
    /* Bugs */
    label({
      name: 'bug/0-needs-info',
      color: colors.danger,
      description: 'More information is needed for reproduction.',
    }),
    label({
      name: 'bug/1-repro-available',
      color: colors.danger,
      description: 'A reproduction exists and needs to be confirmed.',
    }),
    label({
      name: 'bug/2-confirmed',
      color: colors.danger,
      description: 'We have confirmed that this is a bug.',
    }),
    /* Kind */
    label({
      name: 'kind/bug',
      color: colors.neutral,
      description: 'A reported bug.',
    }),
    label({
      name: 'kind/regression',
      color: colors.neutral,
      description: 'A reported bug in functionality that used to work before.',
    }),
    label({
      name: 'kind/feature',
      color: colors.neutral,
      description: 'A request for a new feature.',
    }),
    label({
      name: 'kind/improvement',
      color: colors.neutral,
      description: 'An improvement to existing feature and code.',
    }),
    label({
      name: 'kind/docs',
      color: colors.neutral,
      description: 'A documentation change is required.',
    }),
    label({
      name: 'kind/discussion',
      color: colors.neutral,
      description: 'Discussion is required.',
    }),
    label({
      name: 'kind/question',
      color: colors.neutral,
      description: 'Developer asked a question. No code changes required.',
    }),
    /* Process triaging. */
    label({
      name: 'process/candidate',
      color: colors.shiny,
      description: 'Candidate for next Milestone.',
    }),
    label({
      name: 'process/next-milestone',
      color: colors.shiny,
      description: 'Issue earmarked for next Milestone.',
    }),
    label({
      name: 'process/product',
      color: colors.shiny,
      description: 'Temporary label to export products issues from the Engineering process',
    }),
  ],
})
",
}
`;

exports[`github integration: bootstraps configuraiton 2`] = `
Object {
  "0": Array [
    Object {
      "mode": "100644",
      "path": "github.ts",
      "sha": 6,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "prisma.ts",
      "sha": 7,
      "type": "blob",
    },
  ],
  "1": Array [
    Object {
      "mode": "040000",
      "path": "repos",
      "sha": 0,
      "type": "tree",
    },
    Object {
      "mode": "100644",
      "path": ".gitignore",
      "sha": 0,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "README.md",
      "sha": 1,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "labelsync.ts",
      "sha": 2,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "labelsync.yml",
      "sha": 3,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "package.json",
      "sha": 4,
      "type": "blob",
    },
    Object {
      "mode": "100644",
      "path": "tsconfig.json",
      "sha": 5,
      "type": "blob",
    },
  ],
}
`;
